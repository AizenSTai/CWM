<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="NLog\nlog-internal.log">

  <!--<variable name="mailUsername" value="${trim-whitespace:${file-contents:${basedir}/mailUsername.txt}}" />
  <variable name="mailPassword" value="${trim-whitespace:${file-contents:${basedir}/mailPassword.txt}}" />-->
  <variable name="mailUsername" value="merchant@microsis.net" />
  <variable name="mailPassword" value="MmS@1234" />

  <extensions>
    <add assembly="NLog.Web.AspNetCore" />
    <add assembly="NLog.Extended" />
  </extensions>

  <targets>
    <!-- write logs of Error & Fatal-->
    <target xsi:type="File" name="ErrorFile" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} | ${processid} | ${aspnet-request:servervariable=URL} | ${uppercase:${level}} | ${callsite:className=true:methodName=true} | ${message}"  />
    <!-- write logs of Trace & Debug -->
    <target xsi:type="File" name="TraceFile" fileName="${basedir}/logs/${shortdate}.trace.log"
            layout="${longdate} | ${processid} | ${aspnet-request:servervariable=URL} | ${uppercase:${level}} | ${callsite:className=true:methodName=true} | ${message}"  />


    <target type="Database" name="database" connectionstring="Server=185.211.56.254\\MSSQLSERVER2019;Database=notifeei_db;user=notifeei_db;password=C_2qvf06;MultipleActiveResultSets=true">
      <commandText>
        INSERT INTO Logs ([LogLevel], [LogDateTime], [LogDateInt],[LogTimeInt],[OperationType], [TrackingNumber] ,
        [NotifeeId], [PaymentId], [ClientAddr], [MessageType], [MessageValue], [LogUser])
        VALUES (@LogLevel,@LogDateTime,@LogDateInt,@OperationType, @TrackingNumber,@NotifeeId,@PaymentId,
        @ClientAddr,@MessageType,@MessageValue,@LogUser);
      </commandText>
      <parameter name="@LogLevel" layout="${LogLevel}"/>
      <parameter name="@LogDateTime" layout="${LogDateTime}" dbType="DbType.Date"/>
      <!--<parameter name="@Origin" layout="${callsite}"/>-->
      <parameter name="@LogDateInt" layout="${LogDateInt}" dbType="DbType.Int32"/>
      <parameter name="@LogTimeInt" layout="${LogTimeInt}" dbType="DbType.Int32"/>
      <parameter name="@OperationType" layout="${OperationType}" dbType="DbType.Int32"/>
      <parameter name="@TrackingNumber" layout="${TrackingNumber}" />
      <parameter name="@NotifeeId" layout="${NotifeeId}" />
      <parameter name="@PaymentId" layout="${PaymentId}" dbType="DbType.Int64"/>
      <parameter name="@ClientAddr" layout="${ClientAddr}" />
      <parameter name="@MessageType" layout="${MessageType}" />
      <parameter name="@MessageValue" layout="${MessageValue}" />
      <parameter name="@LogUser" layout="${LogUser}" />

      <!-- custom field! -->
    </target>

    <!-- log message to event log -->
    <!--<target xsi:type="EventLog" name="eventLog" source="NLog Demo"
            layout="${message}${newline}Call site: ${callsite:className=true:methodName=true}${newline}Logger: ${logger}">
    </target>-->

    <!-- increase the performance counter -->
    <!--<target xsi:type="PerfCounter" name="pc1" categoryName="My Log" counterName="My Counter"/>-->

    <!-- send mail through GMail server -->
    <target xsi:type="Mail"
            name="mail"
            smtpServer="192.168.115.8"
            smtpPort="25"
            enableSsl="true"
            smtpAuthentication="Basic"
            smtpUserName="${mailUsername}"
            smtpPassword="${mailPassword}"
            from="${mailUsername}"
            to="aslani@microsis.net"
            subject="MMS Error Notify"
            addNewLines="true"
            />


    <!-- send mail asynchronously, so that it does not block the calling thread -->

    <wrapper-target xsi:type="AsyncWrapper" name="asyncMail">
      <target-ref name="mail"/>
    </wrapper-target>

    <wrapper-target xsi:type="AspNetBufferingWrapper" name="allOutputs">
      <wrapper-target xsi:type="PostFilteringWrapper">
        <compound-target xsi:type="SplitGroup">
          <target-ref name="ErrorFile" />
          <target-ref name="TraceFile" />
          <!--<target-ref name="eventLog" />-->
          <!--<target-ref name="pc1" />-->
          <target-ref name="mail" />
        </compound-target>


        <!-- during normal execution only log Info messages -->

        <!--<defaultFilter>level >= LogLevel.Info</defaultFilter>-->

        <!-- if there is at least one error, log everything from trace level -->

        <!--<when exists="level >= LogLevel.Error" filter="level >= LogLevel.Trace" />-->

      </wrapper-target>
    </wrapper-target>

  </targets>

  <rules>
    <logger name="*" writeTo="TraceFile" final="true"/>
    <logger name="*" minlevel="warn"  writeTo="ErrorFile" />
    <!--<logger name="*" minlevel="Trace" writeTo="pc1" />-->
    <logger name="*" minlevel="Error" writeTo="mail" />
    <!--<logger name="*" minlevel="Trace" writeTo="eventLog" />-->
  </rules>
</nlog>